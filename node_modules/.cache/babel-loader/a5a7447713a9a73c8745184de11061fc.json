{"ast":null,"code":"var _jsxFileName = \"/Users/jameslipe/udemy_redux/widgets/src/components/Dropdown.js\";\nimport React, { useState } from 'react';\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  const [open, setOpen] = useState(false);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option.value,\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, option.label);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Select a color\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setOpen(!open),\n    className: `ui selection dropdown ${open ? \"visible active\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"dropdown icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, selected.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu visible transition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, renderedOptions))));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/jameslipe/udemy_redux/widgets/src/components/Dropdown.js"],"names":["React","useState","Dropdown","options","selected","onSelectedChange","open","setOpen","renderedOptions","map","option","value","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMO,eAAe,GAAGL,OAAO,CAACM,GAAR,CAAaC,MAAD,IAAY;AAC9C,QAAIA,MAAM,CAACC,KAAP,KAAiBP,QAAQ,CAACO,KAA9B,EAAqC;AACnC,aAAO,IAAP;AACD;;AAED,wBACE;AACE,MAAA,GAAG,EAAED,MAAM,CAACC,KADd;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAE,MAAMN,gBAAgB,CAACK,MAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,MAAM,CAACE,KALV,CADF;AASC,GAdqB,CAAxB;AAgBE,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,IAAA,OAAO,EAAE,MAAML,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,IAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAFnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,QAAQ,CAACQ,KAAhC,CALF,eAME;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CJ,eAA1C,CANF,CAFF,CADF,CADF;AAeD,CAlCH;;AAoCA,eAAeN,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n  const [open, setOpen] = useState(false);\n\n  const renderedOptions = options.map((option) => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return (\n      <div \n        key={option.value} \n        className=\"item\"\n        onClick={() => onSelectedChange(option)}\n      >\n        {option.label}\n      </div>\n      );\n    });\n\n    return (\n      <div className=\"ui form\">\n        <div className=\"field\">\n          <label className=\"label\">Select a color</label>\n          <div \n            onClick={() => setOpen(!open)} \n            className={`ui selection dropdown ${open ? \"visible active\" : \"\"}`}\n          >\n            <i className=\"dropdown icon\"></i>\n            <div className=\"text\">{selected.label}</div>\n            <div className=\"menu visible transition\">{renderedOptions}</div>\n          </div>\n        </div>\n      </div>\n    )\n  };\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}