{"ast":null,"code":"var _jsxFileName = \"/Users/jameslipe/udemy_redux/widgets/src/components/Dropdown.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    document.body.addEventListener('click', e => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    });\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option.value,\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, option.label);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Select a color\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setOpen(!open),\n    className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"dropdown icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, selected.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: `menu ${open ? \"visible transition\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, renderedOptions))));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/jameslipe/udemy_redux/widgets/src/components/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdown","options","selected","onSelectedChange","open","setOpen","ref","document","body","addEventListener","e","current","contains","event","target","renderedOptions","map","option","value","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAyCC,CAAD,IAAO;AAC7C,UAAIJ,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBC,KAAK,CAACC,MAA3B,CAAJ,EAAwC;AACtC;AACD;;AACDT,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,QAAMU,eAAe,GAAGd,OAAO,CAACe,GAAR,CAAaC,MAAD,IAAY;AAC9C,QAAIA,MAAM,CAACC,KAAP,KAAiBhB,QAAQ,CAACgB,KAA9B,EAAqC;AACnC,aAAO,IAAP;AACD;;AAED,wBACE;AACE,MAAA,GAAG,EAAED,MAAM,CAACC,KADd;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAE,MAAMf,gBAAgB,CAACc,MAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,MAAM,CAACE,KALV,CADF;AASC,GAdqB,CAAxB;AAgBE,sBACE;AAAK,IAAA,GAAG,EAAEb,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,IAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAFnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,QAAQ,CAACiB,KAAhC,CALF,eAME;AAAK,IAAA,SAAS,EAAG,QAAOf,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DW,eAA7D,CANF,CAFF,CADF,CADF;AAeD,CA5CH;;AA8CA,eAAef,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n\n  useEffect(() => {\n    document.body.addEventListener('click', (e) => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n      setOpen(false);\n    });\n  }, []);\n\n  const renderedOptions = options.map((option) => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return (\n      <div \n        key={option.value} \n        className=\"item\"\n        onClick={() => onSelectedChange(option)}\n      >\n        {option.label}\n      </div>\n      );\n    });\n\n    return (\n      <div ref={ref} className=\"ui form\">\n        <div className=\"field\">\n          <label className=\"label\">Select a color</label>\n          <div \n            onClick={() => setOpen(!open)} \n            className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n          >\n            <i className=\"dropdown icon\"></i>\n            <div className=\"text\">{selected.label}</div>\n            <div className={`menu ${open ? \"visible transition\" : \"\"}`}>{renderedOptions}</div>\n          </div>\n        </div>\n      </div>\n    )\n  };\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}